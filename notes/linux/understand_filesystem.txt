Unix/Linux filesystem blocks
最常用的二个作用
 - 大多数块(block)存储用户数据
 - 在每一个文件系统一些块存储文件系统元数据

什么是元数据呢？简单来说元数据描述了文件系统的数据结构，大多数常见的元数据结构是超级块(superblock)，inode 和 目录

- superblock:
  ** 文件系统类型
  ** 大小
  ** 状态
  ** 其它元信息结构的信息

  dumpe2fs /dev/sda1 | grep -i superblock

- 文件系统是1k 块大小的，备份的superblock可以在 block 8193 找到
- 文件系统是2k 块大小的，在 block 16384
- 文件大小是4k 块大小的，在 block 32768

backup filesystem
dd if=/dev/sda2 of=/disk/backup-sda2.img

inode: 在unix文件系统里最基本的概念，每一个文件系统的对象都被一个inode表示
什么是对象？
 - 文件类型（可执行的，块或者其它）
 - 权限（读，写，等）
 - 所有者
 - 所有组
 - 文件大小
 - 文件访问，改变和修改时间（记住Unix或Linux是从来不存储文件创建时间的）
 - 文件删除时间
 - 链接的数量（软/硬）
 - 扩展属性，比如只能递增增加，或包括root没有人能删除它
 - 访问控制列表（ACLs）

上面所有的信息都会存储在一个inode里，每一个inode被一个不同的inode数字标识

ext2/ext3的限制
 - 单目录下上限的子目录数 32768
 - 单目录下"软"上限的文件数量是 10-15k

symbol link (软链接): 另一个文件抽象路径的符号路径
hard links: 物理数据的特定路径

hard link vs Soft
 - hard links 不能创建链接目录
 - 不能跨文件系统
 - 符号链接不能被更新
 - 硬链接总是引用到源，即使它被移动或是被删除掉





