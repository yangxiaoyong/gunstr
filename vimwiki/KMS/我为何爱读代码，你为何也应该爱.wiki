
我发现，许多程序员都讨厌读代码——拜托别掩饰了，承认吧。差不多每个人都喜欢写代码——写代码乐在其中。可是，读代码真是不容易，而且还很烦人，又无可逃避，其他人写的代码总是很垃圾（即便不说，我们心里也这么想的）。即使自己写的代码，过几个小时再看也有点垃圾，过的时间再久点，就更垃圾了。那么，还有什么理由去看别人的蹩脚代码，而是不自己写几手漂亮的？能不能暂且忽略这个问题，花上几个小时看别人的代码，再回头来看自己的是不是还那么漂亮？即便有位大师坐在你面前，如果你不能从他身上学习，你永远也成不了大师。办法之一就是找到这么一位大师，让他手把手地教会你全部知识。有这可能吗？——当然有，只是很难遇到这顶好的运气。不过你也不必奢求那么幸运，做程序员这行就很幸运，因为大师们的所有思想和技艺都凝铸在他们的代码里，供我们学习。你要做的只是阅读代码——当然，如果有人给你一点点地讲肯定更节省时间，但这基本属于痴人说梦。换句话说，要相当个好木匠，得仔细研究大量的精美家具。

我热爱读代码，我总是直观地认为读代码的收获很大，没错，它可能有点讨厌甚至烦人，但你的收益绝对大过这点麻烦。举个例子，你要当大作家，是不是只关心自己写东西就够了？你可以试试看，但是估计不会折腾不出什么名堂。公认的事实是，多数大作家都是会如饥似渴大量阅读的。想写出好的作品，必须先阅读其他大作家的作品，吸收不同的风格，了解他人的尝试，然后才可以培养自己的创造力。这样，你的知识才能逐渐积累，最终你写的东西才有几分成熟，你也才会找到“感觉”。写代码也是这样，如果你不去阅读那些伟大的代码，怎么可能把程序写的漂亮？阅读伟大的代码之于程序员，就如同阅读伟大作品之于作家（我不敢掠美，这句话是Peter
Norvig(译注：Peter Norvig是著名的Lisp程序员，现任Google研发总监)说的，他可不是个简单人物，所以好好记住这句话吧）。

即使上面说的你都不信，但有个事实无可否认。要想当个称职的开发人员，能熟练阅读代码是非常重要的。如今，只要不是闹着玩的项目，都是团队协作的成果，所以总会有这样的代码：它不是你写的，但你必须跟它打交道，去修改，或者去扩展。于是，阅读代码很可能就是你身上最重要最常用的能力了，咬紧牙关练好这门本事吧——而且，要快。

要像…会读代码的那些家伙一样…阅读代码

我都说不清有多少次见过这样的事情了：程序员把一段不熟悉的代码上下拖动，几分钟之后仍然一脸迷离。不久他们就宣布，这段代码根本没法看懂，更不必浪费时间了，可以想办法绕过这个问题。我不知道他们真正要做的是什么，一点点弄明白这段代码的意思，还是睁大眼睛等着开窍？阅读代码不靠成年累月死盯着看，你要做的是弄懂它，把它变成自己的。下面说的是我用的一些技巧，但不是全部，不过我觉得这些非常有用。



看代码看到目光迷离

1. 尝试亲自构建和运行程序。通常这一步很容易做到，比如你看的是真正运行的工作代码时（而不是不知来源的古怪代码）就是如此。不过也不是每次都很容易，如果不能很容易地构建和运行，你可以在完成构建和运行的过程中，认识到代码的高层结构。而且，阅读工作代码，你会非常熟悉如何构建项目。构建通常是复杂的，但是了解构建过程，知道代码是如何变为可执行程序的，会大大加深你的理解。

2. 别死盯细节。读代码要做的第一件事，是找到对代码的结构和风格的感觉。开始应当浏览，并且努力找出各部分代码都在干什么。这样你能熟悉整套代码的高层结构，也会明白你正在看的是什么样的代码（重构良好的，还是乱成一团的）。这时候你要做的就是找到入口（可能是main函数，也可能是servlet，controller之类），看看下面的分支是怎么展开的。这一步不要花太多时间，你对全部代码更熟悉之后，随时可以退回来。

3. 确保理解所有构造（construct)。除非你非常精通这门编程语言，否则多半还有些东西是你不知道的。在概略了解代码的阶段，要记下每一个不熟悉的构造。如果这样的构造有很多，下一步就不言自明了。如果搞不懂代码行为的意义，你什么也干不了。即便你不熟悉的只是少数构造，仔细观察推敲没准也是好事。你可能会找到一些以前不知道的关于这门编程语言的知识，我就很乐意为此花上几个小时。

4.
待熟悉了大多数构造之后，就可以搞几次随机的深入探查了。做法类似第2步，快速浏览代码库，但是这次要随机抽几个函数或者类，一行行地看下去。真正的考验现在才开始，但你的收益也是从这一步开始显现。主旨是：真正深入到你所阅读的整套代码的°写代码的价值所在，你在练习，你的水平在提高，但是阅读和改动其他人写的代码也很有价值（至少不亚于自己重新写），从中你学习到的不光是有价值的技术知识，还有关于整个工作领域的知识（毕竟，代码才是文档的最终形式），这种知识通常更有价值。

每一段不遵循传统的，莫测难懂的代码，都是有价值的。你知道我说的是什么，虽然它看起来一团糟，但本意并非如此（也可能因为它是Perl代码:)）。每次我看到这样的代码，我都这么想。不妨把阅读它当作猜谜游戏，想想你能学到什么。是的，这很折磨人，但必须承认，你也希望能动手就能写出这么糟糕的代码。如果你花时间阅读这样的代码，你肯定更可能写出这样的代码——这倒不是说，你一定会写这样的代码，但你肯定希望自己能够。最后要说的是，态度总是非常重要的。如果你把阅读代码看作闲杂事ï
