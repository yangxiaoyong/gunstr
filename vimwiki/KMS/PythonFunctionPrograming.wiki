== 笛而卡积的计算 ==

{{{
class="brush: python"

def sequence(n):
    base = ['A', 'T', 'C', 'G']
    print reduce(lambda x, y: [(a+b) for a in x for b in y],
                 map(lambda x: [x]*n, [base]),
                 [0])
}}}

== Flattern a list ==
Goal: turn `[[1, 2, 3], [4, 5], [6, 7, 8]] into [1, 2, 3, 4, 5, 6, 7, 8]`.

{{{
reduce(list.__add__, [[1, 2, 3], [4, 5], [6, 7, 8], []])
}}}

== List of digits to a number ==
Goal: turn `[1, 2, 3, 4, 5, 6, 7, 8] into 12345678`

Ugly, slow way:

{{{
int("".join(map(str, [1, 2, 3, 4, 6, 7, 8])))
}}}

pretty reduce way:

{{{
reduce(lambda a, d: 10*a + d, [1, 2, 3, 4, 5, 6, 7, 8], 0)
}}}

